{"version":3,"sources":["webpack:///./src/app/editor/client/view/section/sidebar/pages/TileEditor/footer/TileManagementContainer/editor/TileVisibilityEditor.vue?f571","webpack:///./src/app/editor/client/view/section/sidebar/pages/TileEditor/footer/TileManagementContainer/editor/TileVisibilityEditor.vue","webpack:///./src/app/editor/client/view/section/sidebar/pages/TileEditor/footer/TileManagementContainer/editor/TileVisibilityEditor.vue?5889","webpack:///./src/app/editor/client/view/section/sidebar/pages/TileEditor/footer/TileManagementContainer/editor/TileVisibilityEditor.vue?d736"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","visibilityControlText","model","value","callback","$$v","visibility","expression","staticRenderFns","getVisibilityControlLabel","tile","type","useTileVisibilityChangeHandler","store","changeVisibility","commit","CHANGE_TILE_VISIBILITY","tileId","id","dispatch","SAVE_TILE_DATA","payload","tileData","TileVisibilityEditor","components","CheckboxToggleEditorControl","props","editedTile","Object","required","setup","root","i18n","$store","label","get","set","component"],"mappings":"+HAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,8BAA8B,CAACE,MAAM,CAAC,MAAQN,EAAIO,sBAAsB,KAAO,SAASC,MAAM,CAACC,MAAOT,EAAc,WAAEU,SAAS,SAAUC,GAAMX,EAAIY,WAAWD,GAAKE,WAAW,iBAC7QC,EAAkB,G,4DCoBtB,SAASC,EAA0BC,GACjC,OAAQA,EAAKP,MAAMQ,MACjB,IAAK,SACH,MAAO,sCACT,IAAK,SACH,MAAO,sCACT,QACE,MAAO,IAIb,SAASC,EACPC,EACAH,GAEA,SAASI,EAAiBR,GACxBO,EAAME,OAAO,OAAaC,uBAAwB,CAAEC,OAAQP,EAAKP,MAAMe,GAAIZ,WAAU,IACrFO,EAAMM,SAA6B,CACjCR,KAAM,OAAWS,eACjBC,QAAS,CAAEC,SAAUZ,EAAKP,SAI9B,OAAOW,EAGT,IAAMS,EAAuB,eAAgB,CAC3CC,WAAY,CACVC,4BAA2B,QAE7BC,MAAO,CACLC,WAAY,CACVhB,KAAMiB,OACNC,UAAU,IAGdC,MAAK,SAACJ,EAAO,G,IAAEK,EAAI,OACXC,EAAO,eAAQD,EAAKE,QAClBN,EAAe,eAAOD,GAAM,WAE9BzB,EAAwB,gBAAS,WACrC,IAAMiC,EAAQzB,EAA0BkB,GACxC,OAAOK,EAAKE,MAER5B,EAAa,eAAS,CAC1B6B,IAAK,iBAAM,OAA2B,QAA3B,EAAAR,EAAWxB,MAAMG,kBAAU,UACtC8B,IAAKxB,EAA+BmB,EAAKE,OAAQN,KAGnD,MAAO,CACLK,KAAI,EACJ/B,sBAAqB,EACrBK,WAAU,MAKD,IC9Eye,I,YCOpf+B,EAAY,eACd,EACA5C,EACAe,GACA,EACA,KACA,KACA,MAIa,aAAA6B,E","file":"js/tile-visibility-editor.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('CheckboxToggleEditorControl',{attrs:{\"label\":_vm.visibilityControlText,\"size\":\"LARGE\"},model:{value:(_vm.visibility),callback:function ($$v) {_vm.visibility=$$v},expression:\"visibility\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\nimport {\n  computed, defineComponent, PropType, Ref, toRefs,\n} from '@vue/composition-api';\nimport useI18N from '@/app/shared/client/logic/i18n';\nimport { CheckboxToggleEditorControl } from '@/app/editor/client/view/component/control';\nimport { ActionType } from '@/app/editor/client/store/action/type';\nimport { MutationType } from '@/app/editor/client/store/mutation/type';\nimport { Store } from 'vuex';\nimport { State } from '@/app/editor/client/store/state';\nimport { SaveTileDataAction } from '@/app/editor/client/store/action/save-tile-data';\nimport { TileData } from '@/app/shared/client/type/tile';\n\nfunction getVisibilityControlLabel(tile: Ref<Readonly<TileData>>): string {\n  switch (tile.value.type) {\n    case 'HEADER':\n      return 'CommonLabels.ShowTile.Header.toggle';\n    case 'FOOTER':\n      return 'CommonLabels.ShowTile.Footer.toggle';\n    default:\n      return '';\n  }\n}\n\nfunction useTileVisibilityChangeHandler(\n  store: Store<State>,\n  tile: Ref<Readonly<TileData>>,\n): (visibility: boolean) => void {\n  function changeVisibility(visibility: boolean): void {\n    store.commit(MutationType.CHANGE_TILE_VISIBILITY, { tileId: tile.value.id, visibility });\n    store.dispatch<SaveTileDataAction>({\n      type: ActionType.SAVE_TILE_DATA,\n      payload: { tileData: tile.value },\n    });\n  }\n\n  return changeVisibility;\n}\n\nconst TileVisibilityEditor = defineComponent({\n  components: {\n    CheckboxToggleEditorControl,\n  },\n  props: {\n    editedTile: {\n      type: Object as PropType<TileData>,\n      required: true,\n    },\n  },\n  setup(props, { root }) {\n    const i18n = useI18N(root.$store);\n    const { editedTile } = toRefs(props);\n\n    const visibilityControlText = computed(() => {\n      const label = getVisibilityControlLabel(editedTile);\n      return i18n(label);\n    });\n    const visibility = computed({\n      get: () => editedTile.value.visibility ?? false,\n      set: useTileVisibilityChangeHandler(root.$store, editedTile),\n    });\n\n    return {\n      i18n,\n      visibilityControlText,\n      visibility,\n    };\n  },\n});\n\nexport default TileVisibilityEditor;\n","import mod from \"-!../../../../../../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../../../../../node_modules/ts-loader/index.js??ref--13-2!../../../../../../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TileVisibilityEditor.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../../../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../../../../../../../node_modules/ts-loader/index.js??ref--13-2!../../../../../../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TileVisibilityEditor.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./TileVisibilityEditor.vue?vue&type=template&id=15b2a252&\"\nimport script from \"./TileVisibilityEditor.vue?vue&type=script&lang=ts&\"\nexport * from \"./TileVisibilityEditor.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}